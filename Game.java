
/**
 * When game is created, it will create a new instance of manger and retain the reference.
 * 
 * 
 * Private data summary:
 *  Manager Instance
 *  Guess list
 *  Wrong Guesses
 *  Word Instance
 *  Word Goal
 * 
 * @author Josh Gillham
 * @version 9-17-12
 */
public interface Game{
    /**
     * Submits a guess. The guess is game word. If the letter is contained in the word
     *  then true is returned.
     * 
     * @arg playerID is the id of the player generated by the manager
     * @arg letter is the letter to guess
     * 
     * @return True if the guess is found in the word
     * 
     * @throws IllegalArgumentException when playerID does not represent a player
     * @throws IllegalArgumentException when letter is not a letter i.e. '?' or '9'
     */
    public bool makeGuess( int playerID, char letter );
    /**
     * Gets the current word with underscores representing unguessed letters.
     */
    public String getWordStatus();
    /**
     * Gets an instance of the Manager that Game is currently using.
     */
    public Manager getManager();
}
